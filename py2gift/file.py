# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/25_file.ipynb.

# %% auto 0
__all__ = ['supplement_file_name', 'unique_name']

# %% ../nbs/25_file.ipynb 2
import pathlib
import uuid
from typing import Union

# %% ../nbs/25_file.ipynb 5
def supplement_file_name(file: Union[str, pathlib.Path], sup: str) -> pathlib.Path:
    """
    Adds a string between the file name in a path and the suffix.

    **Parameters**
    
    - `file` : str
        
        File name
    
    - `sup` : str
        
        String to be added

    **Returns**
    
    - `out`: pathlib.Path
        
        "Supplemented" file

    """

    file = pathlib.Path(file)

    # the `suffix` is incorporated into the file name
    return file.with_name(file.stem + f'_{sup}' + file.suffix)

assert supplement_file_name('/a/b/quixote.tex', 'foo') == pathlib.Path('/a/b/quixote_foo.tex')

# %% ../nbs/25_file.ipynb 8
def unique_name(file: Union[str, pathlib.Path]) -> pathlib.Path:
    """
    Builds a unique file name out of a given one.

    **Parameters**
    
    - `file` : str
        
        Input file name.

    **Returns**
    
    - `out`: pathlib.Path
        
        Unique file name.

    """
    
    return supplement_file_name(file, uuid.uuid1())
