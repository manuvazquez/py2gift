# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/py2gift/',
                'doc_host': 'https://manuvazquez.github.io',
                'git_url': 'https://github.com/manuvazquez/py2gift/tree/master/',
                'lib_path': 'py2gift'},
  'syms': { 'py2gift.core': { 'py2gift.core.build': ('core.html#build', 'py2gift/core.py'),
                              'py2gift.core.build_question': ('core.html#build_question', 'py2gift/core.py'),
                              'py2gift.core.generator_to_markdown': ('core.html#generator_to_markdown', 'py2gift/core.py'),
                              'py2gift.core.init_parameters_from_settings': ('core.html#init_parameters_from_settings', 'py2gift/core.py'),
                              'py2gift.core.latex_to_markdown': ('core.html#latex_to_markdown', 'py2gift/core.py'),
                              'py2gift.core.main': ('core.html#main', 'py2gift/core.py')},
            'py2gift.file': { 'py2gift.file.supplement_file_name': ('file.html#supplement_file_name', 'py2gift/file.py'),
                              'py2gift.file.unique_name': ('file.html#unique_name', 'py2gift/file.py')},
            'py2gift.hash': { 'py2gift.hash.matrix': ('hash.html#matrix', 'py2gift/hash.py'),
                              'py2gift.hash.number': ('hash.html#number', 'py2gift/hash.py'),
                              'py2gift.hash.string': ('hash.html#string', 'py2gift/hash.py')},
            'py2gift.input_file': { 'py2gift.input_file.Settings': ('input_file.html#settings', 'py2gift/input_file.py'),
                                    'py2gift.input_file.Settings.__init__': ('input_file.html#settings.__init__', 'py2gift/input_file.py'),
                                    'py2gift.input_file.Settings.__repr__': ('input_file.html#settings.__repr__', 'py2gift/input_file.py'),
                                    'py2gift.input_file.Settings.add_category': ( 'input_file.html#settings.add_category',
                                                                                  'py2gift/input_file.py'),
                                    'py2gift.input_file.Settings.add_or_update_class': ( 'input_file.html#settings.add_or_update_class',
                                                                                         'py2gift/input_file.py'),
                                    'py2gift.input_file.Settings.fake_module': ( 'input_file.html#settings.fake_module',
                                                                                 'py2gift/input_file.py'),
                                    'py2gift.input_file.Settings.locate': ('input_file.html#settings.locate', 'py2gift/input_file.py'),
                                    'py2gift.input_file.Settings.to_dict': ('input_file.html#settings.to_dict', 'py2gift/input_file.py'),
                                    'py2gift.input_file.extract_class_settings': ( 'input_file.html#extract_class_settings',
                                                                                   'py2gift/input_file.py'),
                                    'py2gift.input_file.function_to_make_hierarchical_category_name': ( 'input_file.html#function_to_make_hierarchical_category_name',
                                                                                                        'py2gift/input_file.py'),
                                    'py2gift.input_file.initialize': ('input_file.html#initialize', 'py2gift/input_file.py'),
                                    'py2gift.input_file.set_class': ('input_file.html#set_class', 'py2gift/input_file.py'),
                                    'py2gift.input_file.set_class_closing': ('input_file.html#set_class_closing', 'py2gift/input_file.py'),
                                    'py2gift.input_file.set_class_preamble': ( 'input_file.html#set_class_preamble',
                                                                               'py2gift/input_file.py'),
                                    'py2gift.input_file.write_class_closing': ( 'input_file.html#write_class_closing',
                                                                                'py2gift/input_file.py'),
                                    'py2gift.input_file.write_class_preamble': ( 'input_file.html#write_class_preamble',
                                                                                 'py2gift/input_file.py'),
                                    'py2gift.input_file.write_header': ('input_file.html#write_header', 'py2gift/input_file.py')},
            'py2gift.markdown': { 'py2gift.markdown.SvgToMarkdown': ('markdown.html#svgtomarkdown', 'py2gift/markdown.py'),
                                  'py2gift.markdown.SvgToMarkdown.__init__': ( 'markdown.html#svgtomarkdown.__init__',
                                                                               'py2gift/markdown.py'),
                                  'py2gift.markdown.from_question': ('markdown.html#from_question', 'py2gift/markdown.py'),
                                  'py2gift.markdown.html_question_to_markdown': ( 'markdown.html#html_question_to_markdown',
                                                                                  'py2gift/markdown.py'),
                                  'py2gift.markdown.markdown_header': ('markdown.html#markdown_header', 'py2gift/markdown.py'),
                                  'py2gift.markdown.multiple_choice_to_markdown': ( 'markdown.html#multiple_choice_to_markdown',
                                                                                    'py2gift/markdown.py'),
                                  'py2gift.markdown.numerical_to_markdown': ('markdown.html#numerical_to_markdown', 'py2gift/markdown.py'),
                                  'py2gift.markdown.settings_to_markdown': ('markdown.html#settings_to_markdown', 'py2gift/markdown.py')},
            'py2gift.notebook': { 'py2gift.notebook.ClassesContainer': ('notebook.html#classescontainer', 'py2gift/notebook.py'),
                                  'py2gift.notebook.ClassesContainer.add': ('notebook.html#classescontainer.add', 'py2gift/notebook.py'),
                                  'py2gift.notebook.MyMagics': ('notebook.html#mymagics', 'py2gift/notebook.py'),
                                  'py2gift.notebook.MyMagics.__init__': ('notebook.html#mymagics.__init__', 'py2gift/notebook.py'),
                                  'py2gift.notebook.MyMagics.feedback': ('notebook.html#mymagics.feedback', 'py2gift/notebook.py'),
                                  'py2gift.notebook.MyMagics.process': ('notebook.html#mymagics.process', 'py2gift/notebook.py'),
                                  'py2gift.notebook.MyMagics.statement': ('notebook.html#mymagics.statement', 'py2gift/notebook.py')},
            'py2gift.question': { 'py2gift.question.MultipleChoiceQuestionGenerator': ( 'question.html#multiplechoicequestiongenerator',
                                                                                        'py2gift/question.py'),
                                  'py2gift.question.MultipleChoiceQuestionGenerator.__call__': ( 'question.html#multiplechoicequestiongenerator.__call__',
                                                                                                 'py2gift/question.py'),
                                  'py2gift.question.MultipleChoiceQuestionGenerator.__init__': ( 'question.html#multiplechoicequestiongenerator.__init__',
                                                                                                 'py2gift/question.py'),
                                  'py2gift.question.MultipleChoiceQuestionGenerator.assemble_question': ( 'question.html#multiplechoicequestiongenerator.assemble_question',
                                                                                                          'py2gift/question.py'),
                                  'py2gift.question.MultipleChoiceQuestionGenerator.class_name': ( 'question.html#multiplechoicequestiongenerator.class_name',
                                                                                                   'py2gift/question.py'),
                                  'py2gift.question.MultipleChoiceTheoreticalQuestionGenerator': ( 'question.html#multiplechoicetheoreticalquestiongenerator',
                                                                                                   'py2gift/question.py'),
                                  'py2gift.question.MultipleChoiceTheoreticalQuestionGenerator.setup': ( 'question.html#multiplechoicetheoreticalquestiongenerator.setup',
                                                                                                         'py2gift/question.py'),
                                  'py2gift.question.NumericalQuestionGenerator': ( 'question.html#numericalquestiongenerator',
                                                                                   'py2gift/question.py'),
                                  'py2gift.question.NumericalQuestionGenerator.__call__': ( 'question.html#numericalquestiongenerator.__call__',
                                                                                            'py2gift/question.py'),
                                  'py2gift.question.NumericalQuestionGenerator.__init__': ( 'question.html#numericalquestiongenerator.__init__',
                                                                                            'py2gift/question.py'),
                                  'py2gift.question.NumericalQuestionGenerator.assemble_question': ( 'question.html#numericalquestiongenerator.assemble_question',
                                                                                                     'py2gift/question.py'),
                                  'py2gift.question.NumericalQuestionGenerator.class_name': ( 'question.html#numericalquestiongenerator.class_name',
                                                                                              'py2gift/question.py'),
                                  'py2gift.question.QuestionGenerator': ('question.html#questiongenerator', 'py2gift/question.py'),
                                  'py2gift.question.QuestionGenerator.__call__': ( 'question.html#questiongenerator.__call__',
                                                                                   'py2gift/question.py'),
                                  'py2gift.question.QuestionGenerator.__init__': ( 'question.html#questiongenerator.__init__',
                                                                                   'py2gift/question.py'),
                                  'py2gift.question.QuestionGenerator.class_name': ( 'question.html#questiongenerator.class_name',
                                                                                     'py2gift/question.py'),
                                  'py2gift.question.QuestionGenerator.partially_assemble_question': ( 'question.html#questiongenerator.partially_assemble_question',
                                                                                                      'py2gift/question.py'),
                                  'py2gift.question.QuestionGenerator.setup': ( 'question.html#questiongenerator.setup',
                                                                                'py2gift/question.py'),
                                  'py2gift.question.TemplatedLatexText': ('question.html#templatedlatextext', 'py2gift/question.py'),
                                  'py2gift.question.TemplatedLatexText.__init__': ( 'question.html#templatedlatextext.__init__',
                                                                                    'py2gift/question.py'),
                                  'py2gift.question.TemplatedLatexText.__repr__': ( 'question.html#templatedlatextext.__repr__',
                                                                                    'py2gift/question.py'),
                                  'py2gift.question.TemplatedLatexText.fill': ( 'question.html#templatedlatextext.fill',
                                                                                'py2gift/question.py'),
                                  'py2gift.question.TemplatedLatexText.final': ( 'question.html#templatedlatextext.final',
                                                                                 'py2gift/question.py'),
                                  'py2gift.question.TemplatedLatexText.is_full': ( 'question.html#templatedlatextext.is_full',
                                                                                   'py2gift/question.py'),
                                  'py2gift.question.TemplatedLatexText.pre_process': ( 'question.html#templatedlatextext.pre_process',
                                                                                       'py2gift/question.py')},
            'py2gift.tex': { 'py2gift.tex.dot_product': ('tex.html#dot_product', 'py2gift/tex.py'),
                             'py2gift.tex.enumerate_assignments': ('tex.html#enumerate_assignments', 'py2gift/tex.py'),
                             'py2gift.tex.enumerate_math': ('tex.html#enumerate_math', 'py2gift/tex.py'),
                             'py2gift.tex.expand': ('tex.html#expand', 'py2gift/tex.py'),
                             'py2gift.tex.from_matrix': ('tex.html#from_matrix', 'py2gift/tex.py'),
                             'py2gift.tex.from_number': ('tex.html#from_number', 'py2gift/tex.py'),
                             'py2gift.tex.gaussian_pdf': ('tex.html#gaussian_pdf', 'py2gift/tex.py'),
                             'py2gift.tex.join': ('tex.html#join', 'py2gift/tex.py'),
                             'py2gift.tex.partwise_function': ('tex.html#partwise_function', 'py2gift/tex.py'),
                             'py2gift.tex.q_function_approximation': ('tex.html#q_function_approximation', 'py2gift/tex.py'),
                             'py2gift.tex.to_formula_maybe': ('tex.html#to_formula_maybe', 'py2gift/tex.py'),
                             'py2gift.tex.total_probability': ('tex.html#total_probability', 'py2gift/tex.py')},
            'py2gift.time': { 'py2gift.time.TimeKeeper': ('time.html#timekeeper', 'py2gift/time.py'),
                              'py2gift.time.TimeKeeper.__init__': ('time.html#timekeeper.__init__', 'py2gift/time.py'),
                              'py2gift.time.TimeKeeper.__str__': ('time.html#timekeeper.__str__', 'py2gift/time.py'),
                              'py2gift.time.TimeKeeper.plot': ('time.html#timekeeper.plot', 'py2gift/time.py'),
                              'py2gift.time.TimeKeeper.process_category_name': ( 'time.html#timekeeper.process_category_name',
                                                                                 'py2gift/time.py'),
                              'py2gift.time.TimeKeeper.record': ('time.html#timekeeper.record', 'py2gift/time.py'),
                              'py2gift.time.TimeKeeper.record_question': ('time.html#timekeeper.record_question', 'py2gift/time.py')},
            'py2gift.util': { 'py2gift.util.AccessorEndowedClass': ('util.html#accessorendowedclass', 'py2gift/util.py'),
                              'py2gift.util.add_name': ('util.html#add_name', 'py2gift/util.py'),
                              'py2gift.util.dict_to_yaml': ('util.html#dict_to_yaml', 'py2gift/util.py'),
                              'py2gift.util.int_to_roman': ('util.html#int_to_roman', 'py2gift/util.py'),
                              'py2gift.util.render_latex': ('util.html#render_latex', 'py2gift/util.py'),
                              'py2gift.util.write_multiple_categories': ('util.html#write_multiple_categories', 'py2gift/util.py'),
                              'py2gift.util.wrong_numerical_solutions_from_correct_one': ( 'util.html#wrong_numerical_solutions_from_correct_one',
                                                                                           'py2gift/util.py'),
                              'py2gift.util.yaml_to_dict': ('util.html#yaml_to_dict', 'py2gift/util.py')}}}
